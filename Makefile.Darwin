CFLAGS  = -g
LDLIBS  =
CAPSLIB     = libCaps.so
DEFAULTLIB  = libDefault.so
QUOTELIB    = libQuote.so
CRLFLIB     = libCRLF.so
BARELIB     = libBareLF.so
NATIVELIB      = libNative.so

EXE     = loadDarwin
OBJS = \
	formatter_main.o \
	formatter_process.o \
	strconcat.o \
	strsplit.o

$(EXE): $(OBJS) Modules/caps/$(CAPSLIB) Modules/default/$(DEFAULTLIB) Modules/quote/$(QUOTELIB) Modules/CRLF/$(CRLFLIB) Modules/bare/$(BARELIB) Modules/native/$(NATIVELIB)
	$(CC) $(CFLAGS) -rdynamic -o $(EXE) $(OBJS) $(LDLIBS)

Modules/caps/$(CAPSLIB):
	cd Modules/caps ; make -f Makefile.Darwin $(CAPSLIB)

Modules/default/$(DEFAULTLIB):
	cd Modules/default ; make -f Makefile.Darwin $(DEFAULTLIB)

Modules/quote/$(QUOTELIB):
	cd Modules/quote ; make -f Makefile.Darwin $(QUOTELIB)

Modules/CRLF/$(CRLFLIB):
	cd Modules/CRLF ; make -f Makefile.Darwin $(CRLFLIB)

Modules/bare/$(BARELIB):
	cd Modules/bare ; make -f Makefile.Darwin $(BARELIB)

Modules/native/$(NATIVELIB):
	cd Modules/native ; make -f Makefile.Darwin $(NATIVELIB)

clean:
	- rm -f $(EXE)
	- rm -f $(OBJS)
	( cd Modules/caps ; make -f Makefile.Darwin clean )
	( cd Modules/default ; make -f Makefile.Darwin clean )
	( cd Modules/quote ; make -f Makefile.Darwin clean )
	( cd Modules/CRLF ; make -f Makefile.Darwin clean )
	( cd Modules/bare ; make -f Makefile.Darwin clean )
	( cd Modules/native ; make -f Makefile.Darwin clean )
